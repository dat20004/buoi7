//1. Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n hai s·ªë l√†m ƒë·∫ßu v√†o v√† hi·ªÉn th·ªã t·ªïng c·ªßa ch√∫ng.
// function number(a,b){
//     let sum = a + b
//     return sum
// }
// console.log(number(2,5))

//2. Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n m·ªôt chu·ªói l√†m ƒë·∫ßu v√†o v√† hi·ªÉn th·ªã ƒë·ªô d√†i c·ªßa chu·ªói.

// function chain(string){
// return string.length
// }
// console.log(chain("Dat"))

// 3. Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n m·ªôt s·ªë l√†m ƒë·∫ßu v√†o v√† hi·ªÉn th·ªã b√¨nh ph∆∞∆°ng c·ªßa s·ªë ƒë√≥.

// function number (n){
//     return n*n
// }
// console.log(number(7))
// 4. Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n m·ªôt danh s√°ch c√°c s·ªë l√†m ƒë·∫ßu v√†o v√† hi·ªÉn th·ªã s·ªë l·ªõn nh·∫•t trong danh s√°ch.
// const arrnumber = [1,2,4,,5,6,8,56,99]
//     let max = -Infinity
//     let arr = ""
//     for(let i = 0;i<arrnumber.length;i++){
//         if(arrnumber[i]>max){
//             max = arrnumber[i]
//             arr = max
//         }
//     }
// console.log(arr)
// 5. Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n m·ªôt danh s√°ch c√°c chu·ªói l√†m ƒë·∫ßu v√†o v√† hi·ªÉn th·ªã chu·ªói ng·∫Øn nh·∫•t trong danh s√°ch.

// const chain = (string) => {
//     let chainmin = Infinity
//     let space = []
//     for(let i = 0 ; i < string.length ; i++){
//         if(chainmin>string[i].length){
//             chainmin = string[i].length
//             space=string[i]
//         } 
//     }
//     return space
// }
// console.log(chain(["Dung","Dat","Manh","Tuan"]))

// 6. Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n m·ªôt danh s√°ch c√°c s·ªë l√†m ƒë·∫ßu v√†o v√† s·∫Øp x·∫øp danh s√°ch theo th·ª© t·ª± tƒÉng d·∫ßn.

// const chain = (string) => {
//     let temp = 0
//     for (let i = 0; i < string.length; i++) {
//         for (let j = i+1; j < string.length; j++) {
//             if (string[i] > string[j]){
//                  temp = string[i]
//                 string[i] = string[j]
//                 string[j] = temp
//             }  
//         }
//     }
//     return string
// }
// console.log(chain([14, 5, 7, 6, 3]))


//7. Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n m·ªôt danh s√°ch c√°c chu·ªói l√†m ƒë·∫ßu v√†o v√† s·∫Øp x·∫øp danh s√°ch theo th·ª© t·ª± alphabet

    // const persons = ["Minh", "ƒê·∫°t","D≈©ng","Tu·∫•n","Tr∆∞·ªùng","M·∫°nh", "Anh","Th·∫£o",]
    // persons.sort((a,b)=>a.localeCompare(b))
    // console.log("persons",persons)

//10. Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n m·ªôt danh s√°ch c√°c chu·ªói l√†m ƒë·∫ßu v√†o v√† tr·∫£ v·ªÅ s·ªë chu·ªói ch·ª©a ch·ªØ 'a'.

    // const kt2 = (s) => {
    //     for (let i = 0; i < s.length; i++) {
    //         if (s[i] === "a") {
    //             return true;
    //         }
    //     }
    //     return false;
    // };
    
    // const kt = (arr) => {
    //     let dem = 0;
    //     for (let i = 0; i < arr.length; i++) {
    //         if (kt2(arr[i]) === true) {
    //             dem++;
    //         }
    //     }
    //     return dem;
    // };
    // console.log(kt(["Dung", "Dat", "Manh"]))


//1. Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n m·ªôt danh s√°ch c√°c s·ªë l√†m ƒë·∫ßu v√†o v√† tr·∫£ v·ªÅ s·ªë l·ªõn th·ª© hai trong danh s√°ch.VD: [70, 11, 20, 4, 100] üëâ 70

// function timSoLonThuHai(danhSachSo) {
//     danhSachSo.sort(function(a, b) {
//         return b - a
//     })
//     const soLonThuHai = danhSachSo[1];
//     return soLonThuHai;
// }

// console.log(timSoLonThuHai([70, 11, 20, 4, 100]));

// //5 Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n m·ªôt danh s√°ch c√°c s·ªë nguy√™n l√†m ƒë·∫ßu v√†o v√† tr·∫£ v·ªÅ t·ªïng con tƒÉng li√™n ti·∫øp l·ªõn nh·∫•t trong danh s√°ch.

// function tongConTangLienTiepLonNhat(danhSachSo) {
//     let tongHienTai = 0;
//     let tongLonNhat = 0;

//     for (let i = 0; i < danhSachSo.length; i++) {
//         // N·∫øu s·ªë hi·ªán t·∫°i v√† t·ªïng hi·ªán t·∫°i l√† d∆∞∆°ng, ti·∫øp t·ª•c th√™m v√†o t·ªïng
//         if (danhSachSo[i] > 0 && tongHienTai + danhSachSo[i] > 0) {
//             tongHienTai += danhSachSo[i];
//         } else {
//             // N·∫øu kh√¥ng, ƒë·∫∑t t·ªïng hi·ªán t·∫°i b·∫±ng s·ªë hi·ªán t·∫°i
//             tongHienTai = danhSachSo[i];
//         }

//         // C·∫≠p nh·∫≠t t·ªïng l·ªõn nh·∫•t
//         if (tongHienTai > tongLonNhat) {
//             tongLonNhat = tongHienTai;
//         }
//     }

//     return tongLonNhat;
// }

// // Nh·∫≠p danh s√°ch s·ªë t·ª´ ng∆∞·ªùi d√πng
// let danhSachSo = prompt("Nh·∫≠p c√°c s·ªë nguy√™n, c√°ch nhau b·ªüi d·∫•u ph·∫©y: ").split(',').map(Number);

// // T√¨m t·ªïng con tƒÉng li√™n ti·∫øp l·ªõn nh·∫•t v√† in ra k·∫øt qu·∫£
// let ketQua = tongConTangLienTiepLonNhat(danhSachSo);
// console.log("T·ªïng con tƒÉng li√™n ti·∫øp l·ªõn nh·∫•t l√†:", ketQua);

//4. Vi·∫øt ch∆∞∆°ng tr√¨nh nh·∫≠n m·ªôt danh s√°ch c√°c s·ªë l√†m ƒë·∫ßu v√†o v√† tr·∫£ v·ªÅ t·ªïng c·ªßa c√°c s·ªë chia h·∫øt cho c·∫£ 3 v√† 5.

// const arrNumber = [12,5,7,8,9,45,65,7,8]
//     const reArrNumber = (arr) => {
//             const newArr = arr.filter(element => element % 3 === 0 || element % 5 === 0)
//             return newArr
//     }
//     const tinh = (arr) => {
//         let sum = 0
//         reArrNumber(arr).forEach((element) => {
//                   sum += element     
//         })
//         return sum
//     }
//     console.log(tinh(arrNumber))


//ARRY-OBJECT
//reverses: Cho ƒë·∫ßu v√†o l√† 1 m·∫£ng, Vi·∫øt m·ªôt function ƒë·ªÉ ƒë·∫£o ng∆∞·ª£c th·ª© t·ª± ph·∫ßn t·ª≠ trong m·∫£ng , y√™u c·∫ßu kh√¥ng d√πng h√†m Reverses c√≥ s·∫µn c·ªßa javascript ( d√πng forEach ho·∫∑c reduce )
//     const arr=[9,7,8,6,5]
//     function chain(arrNumber) {
//     const arrnewNumber = []
//     arr.forEach(element => {
//         arrnewNumber.unshift(element)
//     });
//     return arrnewNumber
// }

// console.log("M·∫£ng sau khi ƒë·∫£o ng∆∞·ª£c:",chain(arr))
/// 1.3 uniq: Cho m·ªôt m·∫£ng ƒë·∫ßu v√†o, vi·∫øt m·ªôt function ƒë·ªÉ lo·∫°i b·ªè c√°c ph·∫ßn t·ª≠ b·ªã l·∫∑p trong m·∫£ng. 
  
// const xoabo = (arr) => {
//     let newArr = [];
//     for (let i = 0; i < arr.length; i++) {
//         if (!newArr.includes(arr[i])) {
//             newArr.push(arr[i]);
//         }
//     }
//     return newArr;
// };
// console.log(xoabo([5,7,6,8,9,7,3,6]));

//TrimAll: Vi·∫øt function lo·∫°i b·ªè t·∫•t c·∫£ kho·∫£ng tr·∫Øng ƒë·∫ßu v√† cu·ªëi c·ªßa m·ªôt chu·ªói b·∫•t k·ª≥, n·∫øu c√≥ kho·∫£ng tr·∫Øng ·ªü gi·ªØa chu·ªói ƒë√≥ th√¨ ch·ªâ gi·ªØ l·∫°i m·ªôt kho·∫£ng tr·∫Øng. 
const string = (arrstring) => {
    const loai = arrstring.trim().replace(/\s+/g, " ");
    return loai;
};
console.log(string("   cafe ch·ªìn  "));